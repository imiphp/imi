name: "ci-prepare"
description: "ci-prepare"

inputs:
  env:
    required: true
    description: "Env Service Name"

runs:
  using: composite
  steps:
    - name: Setup Services
      shell: bash
      run: |
        docker network create imi-ci-service-network --subnet 172.10.12.0/24
        docker compose -f ./.github/service/redis-cluster/docker-compose.yml up -d
        docker compose -f ./.github/docker-compose.yml up -d ${{ inputs.env }} redis-new
        docker exec ${{ inputs.env }} php -v
        docker exec ${{ inputs.env }} php -m
        docker exec ${{ inputs.env }} php --ri swoole
        docker exec ${{ inputs.env }} php -r "echo 'opcache config: '; print_r(opcache_get_status(false));"
        docker exec ${{ inputs.env }} composer -V
    - name: Prepare
      shell: bash
      run: |
        docker exec ${{ inputs.env }} apt install -y rsync netcat-openbsd
        docker exec ${{ inputs.env }} composer config --global cache-files-dir /tmp/base_cache/composer
        docker exec ${{ inputs.env }} composer config -g process-timeout 600
        docker exec ${{ inputs.env }} composer update --no-interaction --prefer-dist --no-progress ${COMPOSER_ENV}
        .github/prepare-kafka.sh
        docker exec ${{ inputs.env }} bash tests/db/install-db.sh
        docker exec postgres psql -d db_imi_test -U root -f /imi/.github/pgsql.sql
    - name: Install RoadRunner
      shell: bash
      run: |
        docker exec ${{ inputs.env }} src/Components/roadrunner/vendor/bin/rr get-binary -f $ROADRUNNER_DOCKER_VERSION -l /usr/local/bin
        docker exec ${{ inputs.env }} rr -v
    - name: Prepared
      shell: bash
      run: |
        echo "test_prepared=1" >> $GITHUB_ENV
